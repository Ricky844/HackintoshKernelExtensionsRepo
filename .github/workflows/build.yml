on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - none
  schedule:
  - cron: '0 22 * * *'
jobs:
  build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lilu Basic Dependency
      run: |
        #!/bin/bash
        BD="$(date +"%Y-%m-%d")"
        echo "##vso[task.setvariable variable=BuildDate]$BD"
        mkdir -p release/Lilu
        mkdir -p release/VoodooInput
        git clone -q https://github.com/acidanthera/MacKernelSDK.git

        echo "==========================================================================="
        echo "========================> Building Lilu Dependency <======================="
        echo "==========================================================================="
        git clone -q https://github.com/acidanthera/Lilu.git && cd Lilu
        cp -r ../MacKernelSDK .
        xcodebuild -configuration Debug > /dev/null 2>&1
        xcodebuild -configuration Release > /dev/null 2>&1
        cd ..
        cp Lilu/build/*/*.zip release/Lilu/
      shell: bash
    - name: Other Maintain Lilu Plugins
      run: |
        #!/bin/bash
        echo "==========================================================================="
        echo "==================> Building OtherMaintain Lilu Plugins <=================="
        echo "==========================================================================="
        otherMaintainLiluPlugins=(
          'ATH9KFixup,https://github.com/athlonreg/ATH9KFixup.git'
        )
        for plugin in ${otherMaintainLiluPlugins[*]}; do
          echo "===================> Building ${plugin%,*} "
          which wget || brew install wget
          addr=$(echo ${plugin##*,}  | awk -F '/' '{print $4"/"$5}' | sed 's/.git//g')
          mkdir -p release/${plugin%,*}
          # git clone -q ${plugin##*,} ${plugin%,*} -b master --depth=1
          # cd ${plugin%,*}
          # if [[ "${plugin%,*}" != "ATH9KFixup" ]] ; then
          #   wget -q https://github.com/acidanthera/Lilu/releases/download/1.4.7/Lilu-1.4.7-DEBUG.zip
          #   unzip -q Lilu-1.4.7-DEBUG.zip && rm -rf Lilu-1.4.7-DEBUG.zip
          # fi
          # xcodebuild -configuration Debug > /dev/null 2>&1
          # xcodebuild -configuration Release > /dev/null 2>&1
          # if [ -e build/Release/*.zip ]; then
          #   cp -f build/*/*.zip ../release/${plugin%,*}
          # else
          #   mkdir -p ../release/${plugin%,*}/Debug
          #   mkdir -p ../release/${plugin%,*}/Release
          #   cp -Rf build/Debug/*.kext ../release/${plugin%,*}/Debug
          #   cp -Rf build/Release/*.kext ../release/${plugin%,*}/Release
          # fi
          cd release/${plugin%,*}
          for i in $(curl https://api.github.com/repos/${addr}/releases/latest | grep browser_download_url | awk -F '"' '{print $4}')
          do
            wget $i
          done
          cd ../..
        done
      shell: bash
    - name: Package
      run: |
        #!/bin/bash
        zip -qry -FS $(date +%Y-%m-%d ).zip release
        cp -p -f -r *.zip ${{ github.workspace }}
      shell: bash
    - name: Publish GitHub Release
      uses: actions/upload-artifact@v2.2.4
      with:
        name: $(BuildDate)
        path: $(date +%Y-%m-%d).zip
